springdoc:
  api-docs:
    enabled: false
---
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          - configprops
          - env
          - health
          - info
          - jhimetrics
          - jhiopenapigroups
          - logfile
          - loggers
          - prometheus
          - threaddump
          - liquibase
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState,db
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
    env:
      enabled: true
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  prometheus:
    metrics:
      export:
        enabled: true
        step: 60
  observations:
    key-values:
      application: ${spring.application.name}
  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    data:
      repository:
        autotime:
          enabled: true

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: CLIENT_ID_GOOGLE #VOTRE_CLIENT_ID_GOOGLE
            client-secret: CLIENT-SECRET_GOOGLE #VOTRE_SECRET_GOOGLE
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            scope:
              - openid
              - profile
              - email
            client-name: Google
            authorization-grant-type: authorization_code

          azure:
            client-id: CLIENT_ID_AZURE
            client-secret: CLIENT-SECRET_AZURE
            scope:
              - openid
              - profile
              - email
              - User.Read
            redirect-uri: "http://localhost:8080/login/oauth2/code/azure"
            authorization-grant-type: authorization_code
            client-name: Azure
            provider: azure

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: email

          azure:
            issuer-uri: https://login.microsoftonline.com/c6f0e6ec-68cf-4da1-ba44-b038a0907130/v2.0
#            authorization-uri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
#            token-uri: https://login.microsoftonline.com/common/oauth2/v2.0/token
#            user-info-uri: https://graph.microsoft.com/oidc/userinfo
#            user-name-attribute: sub # âœ… NOUVEAU : "sub" au lieu de "preferred_username"
  #            user-info-uri: https://graph.microsoft.com/oidc/userinfo
#            user-name-attribute: preferred_username



  config:
    activate:
      on-profile: '!api-docs'

  application:
    name: inscription

  jmx:
    enabled: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.timezone.default_storage: NORMALIZE
      hibernate.type.preferred_instant_jdbc_type: TIMESTAMP
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
  mvc:
    problemdetails:
      enabled: true
  task:
    execution:
      thread-name-prefix: inscription-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: inscription-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true

server:
  servlet:
    session:
      cookie:
        http-only: true

springdoc:
  show-actuator: true

logging:
  level:
    org.springframework.web.socket: DEBUG
    org.springframework.messaging: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG
    org.springframework.security.oauth2.client.userinfo: DEBUG
    org.springframework.security.oauth2.client.registration: DEBUG
    org.springframework.security.oauth2.client.web: DEBUG
    org.springframework.security.oauth2.core: DEBUG
    com.inscription.app: DEBUG # <--- Mets le bon package ici pour voir tes logs


# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'


jhipster:
  cors:
    allowed-origins: "http://localhost:9000"
    allowed-methods: "*"
    allowed-headers: "*"
    allow-credentials: true
  clientApp:
    name: 'inscriptionApp'

  mail:
    from: inscription@localhost
  api-docs:
    default-include-pattern: /api/**
    management-include-pattern: /management/**
    title: Inscription API
    description: Inscription API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:
    content-security-policy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google.com https://www.gstatic.com https://storage.googleapis.com; frame-src 'self' https://www.google.com/recaptcha/ https://recaptcha.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https://img.icons8.com; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https://www.google.com https://www.gstatic.com;"
    authentication:
      jwt:
        base64-secret: c2VjcmV0LW15LWtleS1hc3ItYmFzZTY0LXN0cmluZw==
        token-validity-in-seconds: 86400

google:
  recaptcha:
    site: SITE_RECAPTCHA
    secret: SECRET_RECAPTCHA

#            user-info-uri: https://graph.microsoft.com/oidc/userinfo
